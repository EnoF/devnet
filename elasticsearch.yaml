# ############################################################################ #
# Overwrite file for logging to Elasticsearch
#
# Usage:
#
# docker compose -f docker-compose.yaml -f elasticsearch.yaml
#

version: "3.9"

configs:
  chainweb-node.elastic:
    file: ./config/chainweb-node.elastic.yaml
  kibana.saved-objects:
    file: ./config/kibana.saved-objects.ndjson

services:

  # ########################################################################## #
  # Configure Nodes Logging for Elasticsearch

  bootstrap-node:
    command:
    - --config-file=config/chainweb-node.elastic.yaml
    configs:
    - source: chainweb-node.elastic
      target: /chainweb/config/chainweb-node.elastic.yaml
      mode: 0440
    depends_on:
    - elasticsearch

  common-node:
    command:
    - --config-file=config/chainweb-node.elastic.yaml
    configs:
    - source: chainweb-node.elastic
      target: /chainweb/config/chainweb-node.elastic.yaml
      mode: 0440
    depends_on:
    - elasticsearch

  mining-node:
    command:
    - --config-file=config/chainweb-node.elastic.yaml
    configs:
    - source: chainweb-node.elastic
      target: /chainweb/config/chainweb-node.elastic.yaml
      mode: 0440
    depends_on:
    - elasticsearch

  api-node:
    command:
    - --config-file=config/chainweb-node.elastic.yaml
    configs:
    - source: chainweb-node.elastic
      target: /chainweb/config/chainweb-node.elastic.yaml
      mode: 0440
    depends_on:
    - elasticsearch

  # ########################################################################## #
  # Elastic Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK

  # ########################################################################## #
  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    ports:
    - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
    - elasticsearch

  # Upload saved objects
  kibana-objects:
    image: curlimages/curl:latest
    configs:
    - source: kibana.saved-objects
      target: /chainweb/config/kibana.saved-objects.ndjson
      mode: 0440
    depends_on:
    - kibana
    entrypoint: ["/bin/sh"]
    command:
    - -c
    - |
      RESULT=1
      COUNT=0
      while [ ! $$RESULT -eq 0 -a $$COUNT -lt 4 ] ; do
        sleep 5
        echo "attempt to upload kibana saved objects"
        curl -s 'http://kibana:5601/api/saved_objects/_import?overwrite=true' \
          -X POST \
          -H 'kbn-xsrf: true' \
          --form 'file=@/chainweb/config/kibana.saved-objects.ndjson'
        RESULT=$$?
        COUNT=$$((COUNT + 1))
        echo
        echo "result: $$RESULT"
      done
      echo "done"

